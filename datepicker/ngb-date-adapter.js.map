{"version":3,"file":"ngb-date-adapter.js","sourceRoot":"","sources":["../../src/datepicker/ngb-date-adapter.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAC,UAAU,EAAC,MAAM,eAAe,CAAC;;;;;;;;;;;gBASxC,UAAU;;;;yBATX;;SAUsB,cAAc;;IAkBM,wCAA6B;;;;IACrE;;;;OAIG;;;;;;IACH,wCAAS;;;;;IAAT,UAAU,IAAmB;QAC3B,MAAM,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAC,GAAG,IAAI,CAAC;KACnH;IAED;;;;OAIG;;;;;;IACH,sCAAO;;;;;IAAP,UAAQ,IAAmB;QACzB,MAAM,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAC,GAAG,IAAI,CAAC;KACnH;;gBAlBF,UAAU;;;;+BA3BX;EA4B0C,cAAc;SAA3C,oBAAoB","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {NgbDateStruct} from './ngb-date-struct';\r\n\r\n/**\r\n * Abstract type serving as a DI token for the service converting from your application Date model to internal\r\n * NgbDateStruct model.\r\n * A default implementation converting from and to NgbDateStruct is provided for retro-compatibility,\r\n * but you can provide another implementation to use an alternative format, ie for using with native Date Object.\r\n */\r\n@Injectable()\r\nexport abstract class NgbDateAdapter<T> {\r\n  /**\r\n   * Converts user-model date into an NgbDateStruct for internal use in the library\r\n   * @param  {any}     value any value that end user uses as the date model, ie: NgbDateStruct, Date, \"yyyy-mm-dd\"\r\n   * @return {NgbDateStruct}\r\n   */\r\n  abstract fromModel(value: T): NgbDateStruct;\r\n\r\n  /**\r\n   * Converts internal date value NgbDateStruct to user-model date\r\n   * The returned type is suposed to be of the same type as fromModel() input-value param\r\n   * @param  {NgbDateStruct} date internal NgbDateStruct date representation\r\n   * @return {any}\r\n   */\r\n  abstract toModel(date: NgbDateStruct): T;\r\n}\r\n\r\n@Injectable()\r\nexport class NgbDateStructAdapter extends NgbDateAdapter<NgbDateStruct> {\r\n  /**\r\n   * Converts a NgbDateStruct value into NgbDateStruct value\r\n   * @param  {NgbDateStruct} value\r\n   * @return {NgbDateStruct}\r\n   */\r\n  fromModel(date: NgbDateStruct): NgbDateStruct {\r\n    return (date && date.year && date.month && date.day) ? {year: date.year, month: date.month, day: date.day} : null;\r\n  }\r\n\r\n  /**\r\n   * Converts a NgbDateStruct value into NgbDateStruct value\r\n   * @param  {NgbDateStruct} value\r\n   * @return {NgbDateStruct}\r\n   */\r\n  toModel(date: NgbDateStruct): NgbDateStruct {\r\n    return (date && date.year && date.month && date.day) ? {year: date.year, month: date.month, day: date.day} : null;\r\n  }\r\n}\r\n"]}