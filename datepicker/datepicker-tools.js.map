{"version":3,"file":"datepicker-tools.js","sourceRoot":"","sources":["../../src/datepicker/datepicker-tools.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgbDate} from './ngb-date';\r\nimport {DayViewModel, MonthViewModel, NgbMarkDisabled} from './datepicker-view-model';\r\nimport {NgbCalendar} from './ngb-calendar';\r\nimport {isDefined} from '../util/util';\r\n\r\nexport function isChangedDate(prev: NgbDate, next: NgbDate) {\r\n  return !dateComparator(prev, next);\r\n}\r\n\r\nexport function dateComparator(prev: NgbDate, next: NgbDate) {\r\n  return (!prev && !next) || (!!prev && !!next && prev.equals(next));\r\n}\r\n\r\nexport function checkMinBeforeMax(minDate: NgbDate, maxDate: NgbDate) {\r\n  if (maxDate && minDate && maxDate.before(minDate)) {\r\n    throw new Error(`'maxDate' ${maxDate} should be greater than 'minDate' ${minDate}`);\r\n  }\r\n}\r\n\r\nexport function checkDateInRange(date: NgbDate, minDate: NgbDate, maxDate: NgbDate): NgbDate {\r\n  if (date && minDate && date.before(minDate)) {\r\n    return NgbDate.from(minDate);\r\n  }\r\n  if (date && maxDate && date.after(maxDate)) {\r\n    return NgbDate.from(maxDate);\r\n  }\r\n\r\n  return date;\r\n}\r\n\r\nexport function isDateSelectable(\r\n    date: NgbDate, minDate: NgbDate, maxDate: NgbDate, isDisabled: boolean, markDisabled?: NgbMarkDisabled) {\r\n  // clang-format off\r\n  return !(\r\n    !isDefined(date) ||\r\n    isDisabled ||\r\n    (markDisabled && markDisabled(date, {year: date.year, month: date.month})) ||\r\n    (minDate && date.before(minDate)) ||\r\n    (maxDate && date.after(maxDate))\r\n  );\r\n  // clang-format on\r\n}\r\n\r\nexport function buildMonths(\r\n    calendar: NgbCalendar, months: MonthViewModel[], date: NgbDate, minDate: NgbDate, maxDate: NgbDate,\r\n    displayMonths: number, firstDayOfWeek: number, markDisabled: NgbMarkDisabled, force: boolean): MonthViewModel[] {\r\n  const newMonths = [];\r\n  for (let i = 0; i < displayMonths; i++) {\r\n    const newDate = calendar.getNext(date, 'm', i);\r\n    const index = months.findIndex(month => month.firstDate.equals(newDate));\r\n\r\n    if (force || index === -1) {\r\n      newMonths.push(buildMonth(calendar, newDate, minDate, maxDate, firstDayOfWeek, markDisabled));\r\n    } else {\r\n      newMonths.push(months[index]);\r\n    }\r\n  }\r\n\r\n  return newMonths;\r\n}\r\n\r\nexport function buildMonth(\r\n    calendar: NgbCalendar, date: NgbDate, minDate: NgbDate, maxDate: NgbDate, firstDayOfWeek: number,\r\n    markDisabled: NgbMarkDisabled): MonthViewModel {\r\n  const month:\r\n      MonthViewModel = {firstDate: null, lastDate: null, number: date.month, year: date.year, weeks: [], weekdays: []};\r\n\r\n  date = getFirstViewDate(calendar, date, firstDayOfWeek);\r\n\r\n  // month has weeks\r\n  for (let week = 0; week < calendar.getWeeksPerMonth(); week++) {\r\n    const days: DayViewModel[] = [];\r\n\r\n    // week has days\r\n    for (let day = 0; day < calendar.getDaysPerWeek(); day++) {\r\n      if (week === 0) {\r\n        month.weekdays.push(calendar.getWeekday(date));\r\n      }\r\n\r\n      const newDate = new NgbDate(date.year, date.month, date.day);\r\n      const nextDate = calendar.getNext(newDate);\r\n\r\n      // marking date as disabled\r\n      let disabled = !!((minDate && newDate.before(minDate)) || (maxDate && newDate.after(maxDate)));\r\n      if (!disabled && markDisabled) {\r\n        disabled = markDisabled(newDate, {month: month.number, year: month.year});\r\n      }\r\n\r\n      // saving first date of the month\r\n      if (month.firstDate === null && newDate.month === month.number) {\r\n        month.firstDate = newDate;\r\n      }\r\n\r\n      // saving last date of the month\r\n      if (newDate.month === month.number && nextDate.month !== month.number) {\r\n        month.lastDate = newDate;\r\n      }\r\n\r\n      days.push({\r\n        date: newDate,\r\n        context: {\r\n          date: {year: newDate.year, month: newDate.month, day: newDate.day},\r\n          currentMonth: month.number,\r\n          disabled: disabled,\r\n          focused: false,\r\n          selected: false\r\n        }\r\n      });\r\n\r\n      date = nextDate;\r\n    }\r\n\r\n    month.weeks.push(\r\n        {number: calendar.getWeekNumber(days.map(day => NgbDate.from(day.date)), firstDayOfWeek), days: days});\r\n  }\r\n\r\n  return month;\r\n}\r\n\r\nexport function getFirstViewDate(calendar: NgbCalendar, date: NgbDate, firstDayOfWeek: number): NgbDate {\r\n  const currentMonth = date.month;\r\n  let today = new NgbDate(date.year, date.month, date.day);\r\n  let yesterday = calendar.getPrev(today);\r\n\r\n  const firstDayOfCurrentMonthIsAlsoFirstDayOfWeek =\r\n      () => { return today.month !== yesterday.month && firstDayOfWeek === calendar.getWeekday(today); };\r\n\r\n  const reachedTheFirstDayOfTheLastWeekOfPreviousMonth =\r\n      () => { return today.month !== currentMonth && firstDayOfWeek === calendar.getWeekday(today); };\r\n\r\n  // going back in time\r\n  while (!reachedTheFirstDayOfTheLastWeekOfPreviousMonth() && !firstDayOfCurrentMonthIsAlsoFirstDayOfWeek()) {\r\n    today = new NgbDate(yesterday.year, yesterday.month, yesterday.day);\r\n    yesterday = calendar.getPrev(yesterday);\r\n  }\r\n\r\n  return today;\r\n}\r\n"]}