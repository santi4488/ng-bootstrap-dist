{"version":3,"file":"datepicker-service.js","sourceRoot":"","sources":["../../src/datepicker/datepicker-service.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgbCalendar, NgbPeriod} from './ngb-calendar';\r\nimport {NgbDate} from './ngb-date';\r\nimport {DatepickerViewModel, NgbMarkDisabled} from './datepicker-view-model';\r\nimport {Injectable} from '@angular/core';\r\nimport {isInteger} from '../util/util';\r\nimport {Subject} from 'rxjs/Subject';\r\nimport {buildMonths, checkDateInRange, checkMinBeforeMax, isChangedDate, isDateSelectable} from './datepicker-tools';\r\n\r\nimport {filter} from 'rxjs/operator/filter';\r\nimport {Observable} from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class NgbDatepickerService {\r\n  private _model$ = new Subject<DatepickerViewModel>();\r\n\r\n  private _select$ = new Subject<NgbDate>();\r\n\r\n  private _state: DatepickerViewModel = {\r\n    disabled: false,\r\n    displayMonths: 1,\r\n    firstDayOfWeek: 1,\r\n    focusVisible: false,\r\n    months: [],\r\n    navigation: 'select',\r\n    selectedDate: null\r\n  };\r\n\r\n  get model$(): Observable<DatepickerViewModel> {\r\n    return filter.call(this._model$.asObservable(), model => model.months.length > 0);\r\n  }\r\n\r\n  get select$(): Observable<NgbDate> { return filter.call(this._select$.asObservable(), date => date !== null); }\r\n\r\n  set disabled(disabled: boolean) {\r\n    if (this._state.disabled !== disabled) {\r\n      this._nextState({disabled: disabled});\r\n    }\r\n  }\r\n\r\n  set displayMonths(months: number) {\r\n    if (isInteger(months) && months > 0 && this._state.displayMonths !== months) {\r\n      this._nextState({displayMonths: months});\r\n    }\r\n  }\r\n\r\n  set firstDayOfWeek(firstDayOfWeek: number) {\r\n    if (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {\r\n      this._nextState({firstDayOfWeek: firstDayOfWeek});\r\n    }\r\n  }\r\n\r\n  set focusVisible(focusVisible: boolean) {\r\n    if (this._state.focusVisible !== focusVisible && !this._state.disabled) {\r\n      this._nextState({focusVisible: focusVisible});\r\n    }\r\n  }\r\n\r\n  set maxDate(date: NgbDate) {\r\n    if (date === undefined || this._calendar.isValid(date) && isChangedDate(this._state.maxDate, date)) {\r\n      this._nextState({maxDate: date});\r\n    }\r\n  }\r\n\r\n  set markDisabled(markDisabled: NgbMarkDisabled) {\r\n    if (this._state.markDisabled !== markDisabled) {\r\n      this._nextState({markDisabled: markDisabled});\r\n    }\r\n  }\r\n\r\n  set minDate(date: NgbDate) {\r\n    if (date === undefined || this._calendar.isValid(date) && isChangedDate(this._state.minDate, date)) {\r\n      this._nextState({minDate: date});\r\n    }\r\n  }\r\n\r\n  set navigation(navigation: 'select' | 'arrows' | 'none') {\r\n    if (this._state.navigation !== navigation) {\r\n      this._nextState({navigation: navigation});\r\n    }\r\n  }\r\n\r\n  constructor(private _calendar: NgbCalendar) {}\r\n\r\n  focus(date: NgbDate) {\r\n    if (!this._state.disabled && this._calendar.isValid(date) && isChangedDate(this._state.focusDate, date)) {\r\n      this._nextState({focusDate: date});\r\n    }\r\n  }\r\n\r\n  focusMove(period?: NgbPeriod, number?: number) {\r\n    this.focus(this._calendar.getNext(this._state.focusDate, period, number));\r\n  }\r\n\r\n  focusSelect() {\r\n    if (isDateSelectable(\r\n            this._state.focusDate, this._state.minDate, this._state.maxDate, this._state.disabled,\r\n            this._state.markDisabled)) {\r\n      this.select(this._state.focusDate, {emitEvent: true});\r\n    }\r\n  }\r\n\r\n  open(date: NgbDate) {\r\n    if (!this._state.disabled && this._calendar.isValid(date)) {\r\n      this._nextState({firstDate: date});\r\n    }\r\n  }\r\n\r\n  select(date: NgbDate, options: {emitEvent?: boolean} = {}) {\r\n    const validDate = this.toValidDate(date, null);\r\n    if (!this._state.disabled) {\r\n      if (isChangedDate(this._state.selectedDate, validDate)) {\r\n        this._nextState({selectedDate: validDate});\r\n      }\r\n\r\n      if (options.emitEvent &&\r\n          isDateSelectable(\r\n              validDate, this._state.minDate, this._state.maxDate, this._state.disabled, this._state.markDisabled)) {\r\n        this._select$.next(validDate);\r\n      }\r\n    }\r\n  }\r\n\r\n  toValidDate(date: {year: number, month: number, day?: number}, defaultValue?: NgbDate): NgbDate {\r\n    const ngbDate = NgbDate.from(date);\r\n    if (defaultValue === undefined) {\r\n      defaultValue = this._calendar.getToday();\r\n    }\r\n    return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\r\n  }\r\n\r\n  private _nextState(patch: Partial<DatepickerViewModel>) {\r\n    const newState = this._updateState(patch);\r\n    this._patchContexts(newState);\r\n    this._state = newState;\r\n    this._model$.next(this._state);\r\n  }\r\n\r\n  private _patchContexts(state: DatepickerViewModel) {\r\n    state.months.forEach(month => {\r\n      month.weeks.forEach(week => {\r\n        week.days.forEach(day => {\r\n\r\n          // patch focus flag\r\n          if (state.focusDate) {\r\n            day.context.focused = state.focusDate.equals(day.date) && state.focusVisible;\r\n          }\r\n\r\n          // override context disabled\r\n          if (state.disabled === true) {\r\n            day.context.disabled = true;\r\n          }\r\n\r\n          // patch selection flag\r\n          if (state.selectedDate !== undefined) {\r\n            day.context.selected = state.selectedDate !== null && state.selectedDate.equals(day.date);\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  private _updateState(patch: Partial<DatepickerViewModel>): DatepickerViewModel {\r\n    // patching fields\r\n    const state = Object.assign({}, this._state, patch);\r\n\r\n    let startDate = state.firstDate;\r\n\r\n    // min/max dates changed\r\n    if ('minDate' in patch || 'maxDate' in patch) {\r\n      checkMinBeforeMax(state.minDate, state.maxDate);\r\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\r\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\r\n      startDate = state.focusDate;\r\n    }\r\n\r\n    // disabled\r\n    if ('disabled' in patch) {\r\n      state.focusVisible = false;\r\n    }\r\n\r\n    // initial rebuild via 'select()'\r\n    if ('selectedDate' in patch && this._state.months.length === 0) {\r\n      startDate = state.selectedDate;\r\n    }\r\n\r\n    // focus date changed\r\n    if ('focusDate' in patch) {\r\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\r\n      startDate = state.focusDate;\r\n\r\n      // nothing to rebuild if only focus changed and it is still visible\r\n      if (state.months.length !== 0 && !state.focusDate.before(state.firstDate) &&\r\n          !state.focusDate.after(state.lastDate)) {\r\n        return state;\r\n      }\r\n    }\r\n\r\n    // first date changed\r\n    if ('firstDate' in patch) {\r\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\r\n      startDate = state.firstDate;\r\n    }\r\n\r\n    // rebuilding months\r\n    if (startDate) {\r\n      const forceRebuild = 'firstDayOfWeek' in patch || 'markDisabled' in patch || 'minDate' in patch ||\r\n          'maxDate' in patch || 'disabled' in patch;\r\n\r\n      const months = buildMonths(\r\n          this._calendar, state.months, startDate, state.minDate, state.maxDate, state.displayMonths,\r\n          state.firstDayOfWeek, state.markDisabled, forceRebuild);\r\n\r\n      // updating months and boundary dates\r\n      state.months = months;\r\n      state.firstDate = months.length > 0 ? months[0].firstDate : undefined;\r\n      state.lastDate = months.length > 0 ? months[months.length - 1].lastDate : undefined;\r\n\r\n      // reset selected date if 'markDisabled' returns true\r\n      if ('selectedDate' in patch && state.selectedDate !== null) {\r\n        if (!isDateSelectable(state.selectedDate, state.minDate, state.maxDate, state.disabled, state.markDisabled)) {\r\n          state.selectedDate = null;\r\n        }\r\n      }\r\n\r\n      // adjusting focus after months were built\r\n      if ('firstDate' in patch) {\r\n        if (state.focusDate === undefined || state.focusDate.before(state.firstDate) ||\r\n            state.focusDate.after(state.lastDate)) {\r\n          state.focusDate = startDate;\r\n        }\r\n      }\r\n    }\r\n\r\n    return state;\r\n  }\r\n}\r\n"]}