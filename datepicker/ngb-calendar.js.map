{"version":3,"file":"ngb-calendar.js","sourceRoot":"","sources":["../../src/datepicker/ngb-calendar.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgbDate} from './ngb-date';\r\nimport {Injectable} from '@angular/core';\r\nimport {isInteger} from '../util/util';\r\n\r\nfunction fromJSDate(jsDate: Date) {\r\n  return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\r\n}\r\nfunction toJSDate(date: NgbDate) {\r\n  const jsDate = new Date(date.year, date.month - 1, date.day, 12);\r\n  // this is done avoid 30 -> 1930 conversion\r\n  if (!isNaN(jsDate.getTime())) {\r\n    jsDate.setFullYear(date.year);\r\n  }\r\n  return jsDate;\r\n}\r\n\r\nexport type NgbPeriod = 'y' | 'm' | 'd';\r\n\r\n@Injectable()\r\nexport abstract class NgbCalendar {\r\n  abstract getDaysPerWeek(): number;\r\n  abstract getMonths(): number[];\r\n  abstract getWeeksPerMonth(): number;\r\n  abstract getWeekday(date: NgbDate): number;\r\n\r\n  abstract getNext(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\r\n  abstract getPrev(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\r\n\r\n  abstract getWeekNumber(week: NgbDate[], firstDayOfWeek: number): number;\r\n\r\n  abstract getToday(): NgbDate;\r\n\r\n  abstract isValid(date: NgbDate): boolean;\r\n}\r\n\r\n@Injectable()\r\nexport class NgbCalendarGregorian extends NgbCalendar {\r\n  getDaysPerWeek() { return 7; }\r\n\r\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\r\n\r\n  getWeeksPerMonth() { return 6; }\r\n\r\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\r\n    let jsDate = toJSDate(date);\r\n\r\n    switch (period) {\r\n      case 'y':\r\n        return new NgbDate(date.year + number, 1, 1);\r\n      case 'm':\r\n        jsDate = new Date(date.year, date.month + number - 1, 1, 12);\r\n        break;\r\n      case 'd':\r\n        jsDate.setDate(jsDate.getDate() + number);\r\n        break;\r\n      default:\r\n        return date;\r\n    }\r\n\r\n    return fromJSDate(jsDate);\r\n  }\r\n\r\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\r\n\r\n  getWeekday(date: NgbDate) {\r\n    let jsDate = toJSDate(date);\r\n    let day = jsDate.getDay();\r\n    // in JS Date Sun=0, in ISO 8601 Sun=7\r\n    return day === 0 ? 7 : day;\r\n  }\r\n\r\n  getWeekNumber(week: NgbDate[], firstDayOfWeek: number) {\r\n    // in JS Date Sun=0, in ISO 8601 Sun=7\r\n    if (firstDayOfWeek === 7) {\r\n      firstDayOfWeek = 0;\r\n    }\r\n\r\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\r\n    let date = week[thursdayIndex];\r\n\r\n    const jsDate = toJSDate(date);\r\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\r\n    const time = jsDate.getTime();\r\n    jsDate.setMonth(0);  // Compare with Jan 1\r\n    jsDate.setDate(1);\r\n    return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\r\n  }\r\n\r\n  getToday(): NgbDate { return fromJSDate(new Date()); }\r\n\r\n  isValid(date: NgbDate): boolean {\r\n    if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\r\n      return false;\r\n    }\r\n\r\n    const jsDate = toJSDate(date);\r\n\r\n    return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month &&\r\n        jsDate.getDate() === date.day;\r\n  }\r\n}\r\n"]}