{"version":3,"file":"ngb-date.js","sourceRoot":"","sources":["../../src/datepicker/ngb-date.ts"],"names":[],"mappings":"AAAA,IAAA;IAKE,iBAAmB,IAAY,EAAS,KAAa,EAAS,GAAW;QAAtD,SAAI,GAAJ,IAAI,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAQ;QAAS,QAAG,GAAH,GAAG,CAAQ;KAAI;IAJtE,YAAI,GAAX,UAAY,IAAiD;QAC3D,MAAM,CAAC,IAAI,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;KAClF;IAID,wBAAM,GAAN,UAAO,KAAc;QACnB,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,KAAK,KAAK,CAAC,GAAG,CAAC;KAClG;IAED,wBAAM,GAAN,UAAO,KAAc;QACnB,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACX,MAAM,CAAC,KAAK,CAAC;SACd;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;YAC7B,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC/B,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,KAAK,CAAC,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;aAC9D;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;aACjC;SACF;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;SAC/B;KACF;IAED,uBAAK,GAAL,UAAM,KAAc;QAClB,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACX,MAAM,CAAC,KAAK,CAAC;SACd;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;YAC7B,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC/B,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,KAAK,CAAC,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;aAC9D;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;aACjC;SACF;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;SAC/B;KACF;IAED,0BAAQ,GAAR,cAAa,MAAM,CAAC,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAC,CAAC,EAAE;IAE1E,0BAAQ,GAAR,cAAa,MAAM,CAAI,IAAI,CAAC,IAAI,SAAI,IAAI,CAAC,KAAK,SAAI,IAAI,CAAC,GAAK,CAAC,EAAE;kBA5CjE;IA6CC,CAAA;AA7CD,mBA6CC","sourcesContent":["export class NgbDate {\r\n  static from(date: {year: number, month: number, day?: number}) {\r\n    return date ? new NgbDate(date.year, date.month, date.day ? date.day : 1) : null;\r\n  }\r\n\r\n  constructor(public year: number, public month: number, public day: number) {}\r\n\r\n  equals(other: NgbDate) {\r\n    return other && this.year === other.year && this.month === other.month && this.day === other.day;\r\n  }\r\n\r\n  before(other: NgbDate) {\r\n    if (!other) {\r\n      return false;\r\n    }\r\n\r\n    if (this.year === other.year) {\r\n      if (this.month === other.month) {\r\n        return this.day === other.day ? false : this.day < other.day;\r\n      } else {\r\n        return this.month < other.month;\r\n      }\r\n    } else {\r\n      return this.year < other.year;\r\n    }\r\n  }\r\n\r\n  after(other: NgbDate) {\r\n    if (!other) {\r\n      return false;\r\n    }\r\n    if (this.year === other.year) {\r\n      if (this.month === other.month) {\r\n        return this.day === other.day ? false : this.day > other.day;\r\n      } else {\r\n        return this.month > other.month;\r\n      }\r\n    } else {\r\n      return this.year > other.year;\r\n    }\r\n  }\r\n\r\n  toStruct() { return {year: this.year, month: this.month, day: this.day}; }\r\n\r\n  toString() { return `${this.year}-${this.month}-${this.day}`; }\r\n}\r\n"]}