{"version":3,"file":"datepicker.js","sourceRoot":"","sources":["../../src/datepicker/datepicker.ts"],"names":[],"mappings":"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","sourcesContent":["import {Subscription} from 'rxjs/Subscription';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  TemplateRef,\r\n  forwardRef,\r\n  OnInit,\r\n  SimpleChanges,\r\n  EventEmitter,\r\n  Output,\r\n  OnDestroy,\r\n  ElementRef\r\n} from '@angular/core';\r\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\r\nimport {NgbCalendar} from './ngb-calendar';\r\nimport {NgbDate} from './ngb-date';\r\nimport {NgbDatepickerService} from './datepicker-service';\r\nimport {NgbDatepickerKeyMapService} from './datepicker-keymap-service';\r\nimport {DatepickerViewModel, NavigationEvent} from './datepicker-view-model';\r\nimport {toInteger} from '../util/util';\r\nimport {DayTemplateContext} from './datepicker-day-template-context';\r\nimport {NgbDatepickerConfig} from './datepicker-config';\r\nimport {NgbDateAdapter} from './ngb-date-adapter';\r\nimport {NgbDateStruct} from './ngb-date-struct';\r\nimport {NgbDatepickerI18n} from './datepicker-i18n';\r\nimport {isChangedDate} from './datepicker-tools';\r\n\r\nconst NGB_DATEPICKER_VALUE_ACCESSOR = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => NgbDatepicker),\r\n  multi: true\r\n};\r\n\r\n/**\r\n * The payload of the datepicker navigation event\r\n */\r\nexport interface NgbDatepickerNavigateEvent {\r\n  /**\r\n   * Currently displayed month\r\n   */\r\n  current: {year: number, month: number};\r\n\r\n  /**\r\n   * Month we're navigating to\r\n   */\r\n  next: {year: number, month: number};\r\n}\r\n\r\n/**\r\n * A lightweight and highly configurable datepicker directive\r\n */\r\n@Component({\r\n  exportAs: 'ngbDatepicker',\r\n  selector: 'ngb-datepicker',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    'tabindex': '0',\r\n    '[attr.tabindex]': 'model.disabled ? undefined : \"0\"',\r\n    '(blur)': 'showFocus(false)',\r\n    '(focus)': 'showFocus(true)',\r\n    '(keydown)': 'onKeyDown($event)'\r\n  },\r\n  styles: [`\r\n    :host {\r\n      border: 1px solid rgba(0, 0, 0, 0.125);\r\n      border-radius: 0.25rem;\r\n      display: inline-block;\r\n    }\r\n    .ngb-dp-month {\r\n      pointer-events: none;\r\n    }\r\n    .ngb-dp-header {\r\n      border-bottom: 0px;\r\n      border-radius: .25rem 0.25rem 0rem 0rem;\r\n      padding-top: 0.25rem;\r\n    }\r\n    ngb-datepicker-month-view {\r\n      pointer-events: auto;\r\n    }\r\n    .ngb-dp-month-name {\r\n      font-size: larger;\r\n      height: 2rem;\r\n      line-height: 2rem;\r\n      text-align: center;\r\n    }\r\n    /deep/ .ngb-dp-month + .ngb-dp-month > ngb-datepicker-month-view > .ngb-dp-week {\r\n      padding-left: 1rem;\r\n    }\r\n    /deep/ .ngb-dp-month + .ngb-dp-month > .ngb-dp-month-name {\r\n      padding-left: 1rem;\r\n    }\r\n    /deep/ .ngb-dp-month:last-child .ngb-dp-week {\r\n      padding-right: .25rem;\r\n    }\r\n    /deep/ .ngb-dp-month:first-child .ngb-dp-week {\r\n      padding-left: .25rem;\r\n    }\r\n    /deep/ .ngb-dp-month > ngb-datepicker-month-view > .ngb-dp-week:last-child {\r\n      padding-bottom: .25rem;\r\n    }\r\n    .ngb-dp-months {\r\n      display: -webkit-box;\r\n      display: -ms-flexbox;\r\n      display: flex;\r\n    }\r\n  `],\r\n  template: `\r\n    <ng-template #dt let-date=\"date\" let-currentMonth=\"currentMonth\" let-selected=\"selected\" let-disabled=\"disabled\" let-focused=\"focused\">\r\n      <div ngbDatepickerDayView\r\n        [date]=\"date\"\r\n        [currentMonth]=\"currentMonth\"\r\n        [selected]=\"selected\"\r\n        [disabled]=\"disabled\"\r\n        [focused]=\"focused\">\r\n      </div>\r\n    </ng-template>\r\n\r\n    <div class=\"ngb-dp-header bg-light\">\r\n      <ngb-datepicker-navigation *ngIf=\"navigation !== 'none'\"\r\n        [date]=\"model.firstDate\"\r\n        [minDate]=\"model.minDate\"\r\n        [maxDate]=\"model.maxDate\"\r\n        [months]=\"model.months\"\r\n        [disabled]=\"model.disabled\"\r\n        [showWeekNumbers]=\"showWeekNumbers\"\r\n        [showSelect]=\"model.navigation === 'select'\"\r\n        (navigate)=\"onNavigateEvent($event)\"\r\n        (select)=\"onNavigateDateSelect($event)\">\r\n      </ngb-datepicker-navigation>\r\n    </div>\r\n\r\n    <div class=\"ngb-dp-months\">\r\n      <ng-template ngFor let-month [ngForOf]=\"model.months\" let-i=\"index\">\r\n        <div class=\"ngb-dp-month d-block\">\r\n          <div *ngIf=\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\"\r\n                class=\"ngb-dp-month-name bg-light\">\r\n            {{ i18n.getMonthFullName(month.number) }} {{ month.year }}\r\n          </div>\r\n          <ngb-datepicker-month-view\r\n            [month]=\"month\"\r\n            [dayTemplate]=\"dayTemplate || dt\"\r\n            [showWeekdays]=\"showWeekdays\"\r\n            [showWeekNumbers]=\"showWeekNumbers\"\r\n            [outsideDays]=\"(displayMonths === 1 ? outsideDays : 'hidden')\"\r\n            (select)=\"onDateSelect($event)\">\r\n          </ngb-datepicker-month-view>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n  `,\r\n  providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NgbDatepickerService, NgbDatepickerKeyMapService]\r\n})\r\nexport class NgbDatepicker implements OnDestroy,\r\n    OnChanges, OnInit, ControlValueAccessor {\r\n  model: DatepickerViewModel;\r\n\r\n  private _subscription: Subscription;\r\n  private _selectSubscription: Subscription;\r\n  /**\r\n   * Reference for the custom template for the day display\r\n   */\r\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\r\n\r\n  /**\r\n   * Number of months to display\r\n   */\r\n  @Input() displayMonths: number;\r\n\r\n  /**\r\n   * First day of the week. With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\r\n   */\r\n  @Input() firstDayOfWeek: number;\r\n\r\n  /**\r\n   * Callback to mark a given date as disabled.\r\n   * 'Current' contains the month that will be displayed in the view\r\n   */\r\n  @Input() markDisabled: (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\r\n\r\n  /**\r\n   * Max date for the navigation. If not provided will be 10 years from today or `startDate`\r\n   */\r\n  @Input() maxDate: NgbDateStruct;\r\n\r\n  /**\r\n   * Min date for the navigation. If not provided will be 10 years before today or `startDate`\r\n   */\r\n  @Input() minDate: NgbDateStruct;\r\n\r\n  /**\r\n   * Navigation type: `select` (default with select boxes for month and year), `arrows`\r\n   * (without select boxes, only navigation arrows) or `none` (no navigation at all)\r\n   */\r\n  @Input() navigation: 'select' | 'arrows' | 'none';\r\n\r\n  /**\r\n   * The way to display days that don't belong to current month: `visible` (default),\r\n   * `hidden` (not displayed) or `collapsed` (not displayed with empty space collapsed)\r\n   */\r\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\r\n\r\n  /**\r\n   * Whether to display days of the week\r\n   */\r\n  @Input() showWeekdays: boolean;\r\n\r\n  /**\r\n   * Whether to display week numbers\r\n   */\r\n  @Input() showWeekNumbers: boolean;\r\n\r\n  /**\r\n   * Date to open calendar with.\r\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\r\n   * If nothing or invalid date provided, calendar will open with current month.\r\n   * Use 'navigateTo(date)' as an alternative\r\n   */\r\n  @Input() startDate: {year: number, month: number};\r\n\r\n  /**\r\n   * An event fired when navigation happens and currently displayed month changes.\r\n   * See NgbDatepickerNavigateEvent for the payload info.\r\n   */\r\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\r\n\r\n  /**\r\n   * An event fired when user selects a date using keyboard or mouse.\r\n   * The payload of the event is currently selected NgbDateStruct.\r\n   */\r\n  @Output() select = new EventEmitter<NgbDateStruct>();\r\n\r\n  onChange = (_: any) => {};\r\n  onTouched = () => {};\r\n\r\n  constructor(\r\n      private _keyMapService: NgbDatepickerKeyMapService, public _service: NgbDatepickerService,\r\n      private _calendar: NgbCalendar, public i18n: NgbDatepickerI18n, config: NgbDatepickerConfig,\r\n      private _cd: ChangeDetectorRef, private _elementRef: ElementRef, private _ngbDateAdapter: NgbDateAdapter<any>) {\r\n    this.dayTemplate = config.dayTemplate;\r\n    this.displayMonths = config.displayMonths;\r\n    this.firstDayOfWeek = config.firstDayOfWeek;\r\n    this.markDisabled = config.markDisabled;\r\n    this.minDate = config.minDate;\r\n    this.maxDate = config.maxDate;\r\n    this.navigation = config.navigation;\r\n    this.outsideDays = config.outsideDays;\r\n    this.showWeekdays = config.showWeekdays;\r\n    this.showWeekNumbers = config.showWeekNumbers;\r\n    this.startDate = config.startDate;\r\n\r\n    this._selectSubscription = _service.select$.subscribe(date => { this.select.emit(date.toStruct()); });\r\n\r\n    this._subscription = _service.model$.subscribe(model => {\r\n      const newDate = model.firstDate;\r\n      const oldDate = this.model ? this.model.firstDate : null;\r\n      const newSelectedDate = model.selectedDate;\r\n      const oldSelectedDate = this.model ? this.model.selectedDate : null;\r\n\r\n      this.model = model;\r\n\r\n      // handling selection change\r\n      if (isChangedDate(newSelectedDate, oldSelectedDate)) {\r\n        this.onTouched();\r\n        this.onChange(this._ngbDateAdapter.toModel(newSelectedDate));\r\n      }\r\n\r\n      // emitting navigation event if the first month changes\r\n      if (!newDate.equals(oldDate)) {\r\n        this.navigate.emit({\r\n          current: oldDate ? {year: oldDate.year, month: oldDate.month} : null,\r\n          next: {year: newDate.year, month: newDate.month}\r\n        });\r\n      }\r\n      _cd.markForCheck();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Manually focus the datepicker\r\n   */\r\n  focus() { this._elementRef.nativeElement.focus(); }\r\n\r\n  /**\r\n   * Navigates current view to provided date.\r\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\r\n   * If nothing or invalid date provided calendar will open current month.\r\n   * Use 'startDate' input as an alternative\r\n   */\r\n  navigateTo(date?: {year: number, month: number}) {\r\n    this._service.open(date ? new NgbDate(date.year, date.month, 1) : this._calendar.getToday());\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._subscription.unsubscribe();\r\n    this._selectSubscription.unsubscribe();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.model === undefined) {\r\n      this._service.displayMonths = toInteger(this.displayMonths);\r\n      this._service.markDisabled = this.markDisabled;\r\n      this._service.firstDayOfWeek = this.firstDayOfWeek;\r\n      this._service.navigation = this.navigation;\r\n      this._setDates();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes['displayMonths']) {\r\n      this._service.displayMonths = toInteger(this.displayMonths);\r\n    }\r\n    if (changes['markDisabled']) {\r\n      this._service.markDisabled = this.markDisabled;\r\n    }\r\n    if (changes['firstDayOfWeek']) {\r\n      this._service.firstDayOfWeek = this.firstDayOfWeek;\r\n    }\r\n    if (changes['navigation']) {\r\n      this._service.navigation = this.navigation;\r\n    }\r\n    this._setDates();\r\n  }\r\n\r\n  onDateSelect(date: NgbDate) {\r\n    this._service.focus(date);\r\n    this._service.select(date, {emitEvent: true});\r\n  }\r\n\r\n  onKeyDown(event: KeyboardEvent) { this._keyMapService.processKey(event); }\r\n\r\n  onNavigateDateSelect(date: NgbDate) { this._service.open(date); }\r\n\r\n  onNavigateEvent(event: NavigationEvent) {\r\n    switch (event) {\r\n      case NavigationEvent.PREV:\r\n        this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));\r\n        break;\r\n      case NavigationEvent.NEXT:\r\n        this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));\r\n        break;\r\n    }\r\n  }\r\n\r\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\r\n\r\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\r\n\r\n  setDisabledState(isDisabled: boolean) { this._service.disabled = isDisabled; }\r\n\r\n  showFocus(focusVisible: boolean) { this._service.focusVisible = focusVisible; }\r\n\r\n  writeValue(value) { this._service.select(NgbDate.from(this._ngbDateAdapter.fromModel(value))); }\r\n\r\n  private _setDates() {\r\n    const startDate = this._service.toValidDate(this.startDate, this._calendar.getToday());\r\n    const minDate = this._service.toValidDate(this.minDate, this._calendar.getPrev(startDate, 'y', 10));\r\n    const maxDate =\r\n        this._service.toValidDate(this.maxDate, this._calendar.getPrev(this._calendar.getNext(startDate, 'y', 11)));\r\n\r\n    this.minDate = {year: minDate.year, month: minDate.month, day: minDate.day};\r\n    this.maxDate = {year: maxDate.year, month: maxDate.month, day: maxDate.day};\r\n\r\n    this._service.minDate = minDate;\r\n    this._service.maxDate = maxDate;\r\n    this.navigateTo(startDate);\r\n  }\r\n}\r\n"]}