{"version":3,"file":"modal-window.js","sourceRoot":"","sources":["../../src/modal/modal-window.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,MAAM,EACN,YAAY,EACZ,KAAK,EACL,UAAU,EACV,SAAS,EAIV,MAAM,eAAe,CAAC;AAEvB,OAAO,EAAC,mBAAmB,EAAC,MAAM,yBAAyB,CAAC;;IA6B1D,wBAAoB,MAAkB,EAAU,SAAoB;QAAhD,WAAM,GAAN,MAAM,CAAY;QAAU,cAAS,GAAT,SAAS,CAAW;wBAP9B,IAAI;wBACtB,IAAI;4BAIU,IAAI,YAAY,EAAE;KAEoB;IAExE,sCAAa,GAAb,UAAc,MAAM;QAClB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,KAAK,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YAC1E,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,cAAc,CAAC,CAAC;SAClD;KACF;IAED,+BAAM,GAAN,UAAO,MAAM;QACX,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAC9C,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;SACvC;KACF;IAED,gCAAO,GAAP,UAAQ,MAAM,IAAU,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE;IAEzD,iCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC;QAC3C,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;KACtD;IAED,wCAAe,GAAf;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YAChE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;SACzE;KACF;IAED,oCAAW,GAAX;QACE,IAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;QAC3B,IAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC;QAEtC,IAAI,cAAc,CAAC;QACnB,EAAE,CAAC,CAAC,WAAW,IAAI,WAAW,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACtE,cAAc,GAAG,WAAW,CAAC;SAC9B;QAAC,IAAI,CAAC,CAAC;YACN,cAAc,GAAG,IAAI,CAAC;SACvB;QACD,cAAc,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;QAElD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;KAChD;;gBApEF,SAAS,SAAC;oBACT,QAAQ,EAAE,kBAAkB;oBAC5B,IAAI,EAAE;wBACJ,SAAS,EAAE,4DAA4D;wBACvE,MAAM,EAAE,QAAQ;wBAChB,UAAU,EAAE,IAAI;wBAChB,OAAO,EAAE,iBAAiB;wBAC1B,aAAa,EAAE,gBAAgB;wBAC/B,SAAS,EAAE,uBAAuB;qBACnC;oBACD,QAAQ,EAAE,mLAIP;iBACJ;;;;gBAxBC,UAAU;gBACV,SAAS;;;6BA4BR,KAAK;6BACL,KAAK;yBACL,KAAK;gCACL,KAAK;iCAEL,MAAM,SAAC,SAAS;;yBAvCnB;;SA8Ba,cAAc","sourcesContent":["import {\r\n  Component,\r\n  Output,\r\n  EventEmitter,\r\n  Input,\r\n  ElementRef,\r\n  Renderer2,\r\n  OnInit,\r\n  AfterViewInit,\r\n  OnDestroy\r\n} from '@angular/core';\r\n\r\nimport {ModalDismissReasons} from './modal-dismiss-reasons';\r\n\r\n@Component({\r\n  selector: 'ngb-modal-window',\r\n  host: {\r\n    '[class]': '\"modal fade show\" + (windowClass ? \" \" + windowClass : \"\")',\r\n    'role': 'dialog',\r\n    'tabindex': '-1',\r\n    'style': 'display: block;',\r\n    '(keyup.esc)': 'escKey($event)',\r\n    '(click)': 'backdropClick($event)'\r\n  },\r\n  template: `\r\n    <div [class]=\"'modal-dialog' + (size ? ' modal-' + size : '')\" role=\"document\">\r\n        <div class=\"modal-content\"><ng-content></ng-content></div>\r\n    </div>\r\n    `\r\n})\r\nexport class NgbModalWindow implements OnInit,\r\n    AfterViewInit, OnDestroy {\r\n  private _elWithFocus: Element;  // element that is focused prior to modal opening\r\n\r\n  @Input() backdrop: boolean | string = true;\r\n  @Input() keyboard = true;\r\n  @Input() size: string;\r\n  @Input() windowClass: string;\r\n\r\n  @Output('dismiss') dismissEvent = new EventEmitter();\r\n\r\n  constructor(private _elRef: ElementRef, private _renderer: Renderer2) {}\r\n\r\n  backdropClick($event): void {\r\n    if (this.backdrop === true && this._elRef.nativeElement === $event.target) {\r\n      this.dismiss(ModalDismissReasons.BACKDROP_CLICK);\r\n    }\r\n  }\r\n\r\n  escKey($event): void {\r\n    if (this.keyboard && !$event.defaultPrevented) {\r\n      this.dismiss(ModalDismissReasons.ESC);\r\n    }\r\n  }\r\n\r\n  dismiss(reason): void { this.dismissEvent.emit(reason); }\r\n\r\n  ngOnInit() {\r\n    this._elWithFocus = document.activeElement;\r\n    this._renderer.addClass(document.body, 'modal-open');\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (!this._elRef.nativeElement.contains(document.activeElement)) {\r\n      this._elRef.nativeElement['focus'].apply(this._elRef.nativeElement, []);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    const body = document.body;\r\n    const elWithFocus = this._elWithFocus;\r\n\r\n    let elementToFocus;\r\n    if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\r\n      elementToFocus = elWithFocus;\r\n    } else {\r\n      elementToFocus = body;\r\n    }\r\n    elementToFocus['focus'].apply(elementToFocus, []);\r\n\r\n    this._elWithFocus = null;\r\n    this._renderer.removeClass(body, 'modal-open');\r\n  }\r\n}\r\n"]}