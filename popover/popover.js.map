{"version":3,"file":"popover.js","sourceRoot":"","sources":["../../src/popover/popover.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  Component,\r\n  Directive,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  OnInit,\r\n  OnDestroy,\r\n  Injector,\r\n  Renderer2,\r\n  ComponentRef,\r\n  ElementRef,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n  ComponentFactoryResolver,\r\n  NgZone\r\n} from '@angular/core';\r\n\r\nimport {listenToTriggers} from '../util/triggers';\r\nimport {positionElements, Placement, PlacementArray} from '../util/positioning';\r\nimport {PopupService} from '../util/popup';\r\nimport {NgbPopoverConfig} from './popover-config';\r\n\r\nlet nextId = 0;\r\n\r\n@Component({\r\n  selector: 'ngb-popover-window',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    '[class]': '\"popover bs-popover-\" + placement.split(\"-\")[0]+\" bs-popover-\" + placement',\r\n    'role': 'tooltip',\r\n    '[id]': 'id'\r\n  },\r\n  template: `\r\n    <div class=\"arrow\"></div>\r\n    <h3 class=\"popover-header\">{{title}}</h3><div class=\"popover-body\"><ng-content></ng-content></div>`,\r\n  styles: [`\r\n    :host.bs-popover-top .arrow, :host.bs-popover-bottom .arrow {\r\n      left: 50%;\r\n      margin-left: -5px;\r\n    }\r\n\r\n    :host.bs-popover-top-left .arrow, :host.bs-popover-bottom-left .arrow {\r\n      left: 2em;\r\n    }\r\n\r\n    :host.bs-popover-top-right .arrow, :host.bs-popover-bottom-right .arrow {\r\n      left: auto;\r\n      right: 2em;\r\n    }\r\n\r\n    :host.bs-popover-left .arrow, :host.bs-popover-right .arrow {\r\n      top: 50%;\r\n      margin-top: -5px;\r\n    }\r\n    \r\n    :host.bs-popover-left-top .arrow, :host.bs-popover-right-top .arrow {\r\n      top: 0.7em;\r\n    }\r\n\r\n    :host.bs-popover-left-bottom .arrow, :host.bs-popover-right-bottom .arrow {\r\n      top: auto;\r\n      bottom: 0.7em;\r\n    }\r\n  `]\r\n})\r\nexport class NgbPopoverWindow {\r\n  @Input() placement: Placement = 'top';\r\n  @Input() title: string;\r\n  @Input() id: string;\r\n\r\n  constructor(private _element: ElementRef, private _renderer: Renderer2) {}\r\n\r\n  applyPlacement(_placement: Placement) {\r\n    // remove the current placement classes\r\n    this._renderer.removeClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString().split('-')[0]);\r\n    this._renderer.removeClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString());\r\n\r\n    // set the new placement classes\r\n    this.placement = _placement;\r\n\r\n    // apply the new placement\r\n    this._renderer.addClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString().split('-')[0]);\r\n    this._renderer.addClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString());\r\n  }\r\n}\r\n\r\n/**\r\n * A lightweight, extensible directive for fancy popover creation.\r\n */\r\n@Directive({selector: '[ngbPopover]', exportAs: 'ngbPopover'})\r\nexport class NgbPopover implements OnInit, OnDestroy {\r\n  /**\r\n   * Content to be displayed as popover.\r\n   */\r\n  @Input() ngbPopover: string | TemplateRef<any>;\r\n  /**\r\n   * Title of a popover.\r\n   */\r\n  @Input() popoverTitle: string;\r\n  /**\r\n   * Placement of a popover accepts:\r\n   *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\r\n   *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\r\n   * and array of above values.\r\n   */\r\n  @Input() placement: PlacementArray;\r\n  /**\r\n   * Specifies events that should trigger. Supports a space separated list of event names.\r\n   */\r\n  @Input() triggers: string;\r\n  /**\r\n   * A selector specifying the element the popover should be appended to.\r\n   * Currently only supports \"body\".\r\n   */\r\n  @Input() container: string;\r\n  /**\r\n   * Emits an event when the popover is shown\r\n   */\r\n  @Output() shown = new EventEmitter();\r\n  /**\r\n   * Emits an event when the popover is hidden\r\n   */\r\n  @Output() hidden = new EventEmitter();\r\n\r\n  private _ngbPopoverWindowId = `ngb-popover-${nextId++}`;\r\n  private _popupService: PopupService<NgbPopoverWindow>;\r\n  private _windowRef: ComponentRef<NgbPopoverWindow>;\r\n  private _unregisterListenersFn;\r\n  private _zoneSubscription: any;\r\n\r\n  constructor(\r\n      private _elementRef: ElementRef, private _renderer: Renderer2, injector: Injector,\r\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbPopoverConfig,\r\n      ngZone: NgZone) {\r\n    this.placement = config.placement;\r\n    this.triggers = config.triggers;\r\n    this.container = config.container;\r\n    this._popupService = new PopupService<NgbPopoverWindow>(\r\n        NgbPopoverWindow, injector, viewContainerRef, _renderer, componentFactoryResolver);\r\n\r\n    this._zoneSubscription = ngZone.onStable.subscribe(() => {\r\n      if (this._windowRef) {\r\n        this._windowRef.instance.applyPlacement(\r\n            positionElements(\r\n                this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\r\n                this.container === 'body'));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Opens an element’s popover. This is considered a “manual” triggering of the popover.\r\n   * The context is an optional value to be injected into the popover template when it is created.\r\n   */\r\n  open(context?: any) {\r\n    if (!this._windowRef) {\r\n      this._windowRef = this._popupService.open(this.ngbPopover, context);\r\n      this._windowRef.instance.title = this.popoverTitle;\r\n      this._windowRef.instance.id = this._ngbPopoverWindowId;\r\n\r\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbPopoverWindowId);\r\n\r\n      if (this.container === 'body') {\r\n        window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\r\n      }\r\n\r\n      // apply styling to set basic css-classes on target element, before going for positioning\r\n      this._windowRef.changeDetectorRef.detectChanges();\r\n      this._windowRef.changeDetectorRef.markForCheck();\r\n\r\n      // position popover along the element\r\n      this._windowRef.instance.applyPlacement(\r\n          positionElements(\r\n              this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\r\n              this.container === 'body'));\r\n\r\n      this.shown.emit();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes an element’s popover. This is considered a “manual” triggering of the popover.\r\n   */\r\n  close(): void {\r\n    if (this._windowRef) {\r\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\r\n      this._popupService.close();\r\n      this._windowRef = null;\r\n      this.hidden.emit();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles an element’s popover. This is considered a “manual” triggering of the popover.\r\n   */\r\n  toggle(): void {\r\n    if (this._windowRef) {\r\n      this.close();\r\n    } else {\r\n      this.open();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns whether or not the popover is currently being shown\r\n   */\r\n  isOpen(): boolean { return this._windowRef != null; }\r\n\r\n  ngOnInit() {\r\n    this._unregisterListenersFn = listenToTriggers(\r\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.open.bind(this), this.close.bind(this),\r\n        this.toggle.bind(this));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.close();\r\n    this._unregisterListenersFn();\r\n    this._zoneSubscription.unsubscribe();\r\n  }\r\n}\r\n"]}